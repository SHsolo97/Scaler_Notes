Creating context API for shopping cart:
eg:
import { createContext, useState, useCallback, useContext} from 'react';

const cartContext = CreateContext({
    items : {},
    total : 0,
    addItem : (product) => {},
    removeItem : (product) => {},
    isCartOpen : false
});

export function CartProvider({ children }){
    const [isCartOpen, setCartOpen] = useState(false);
    const [items, setItems] = useState({});
    const [total, setTotal] = useState(0);

    const addItem = useCallback( (product) => {
        const newItems = { ...items};
        if(newItems[product.id]){
            newItems[product.id] = {
                ...newItems[product.id],
                quantity : newItems[product.id].quantity + 1
            }
        }else{
            newItems[product.id] = {
                id : product.id,
                title : product.title,
                price : product.price,
                quantity : 1
            }
        }
        setTotal(total + product.price);
        setItems(newItems)
    }, [items, total] );

    const removeItem = useCallback( (product) => {
        const newItems = { ...items };
        if(!newItems[product.id]){
            return;
        }
        if(newItems[product.id].quantity > 1){
            newItems[product.id] = {
                ...newItems[product.id],
                quantity : newItems[product.id].quantity - 1
            };
        }else{
            delete newItems[product.id];
        }

        setItems(newItems);
        setTotal(total - product.price);
    }, [items, total] );

    return (
        <CartContext.Provider
            value = {{
                items,
                total,
                addItem,
                removeItem,
                isCartOpen,
                setCartOpen
            }}>
            { children }
            </CartContext.Provider>
    );
}

export const useCartContext = () => useContext(CartContext);